---

name: If it compiles, ship it!

on:
  push:
    branches: [ "primary" ]
  pull_request:
    branches: [ "primary" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations.
      fail-fast: false

    matrix:
      include:
        - name: Linux (gcc)
          os: ubuntu-latest
          c_compiler: gcc
          cpp_compiler: g++
        - name: Linux (clang)
          os: ubuntu-latest
          c_compiler: clang
          cpp_compiler: clang++
        - name: macOS
          os: macos-latest
          c_compiler: clang
          cpp_compiler: clang++
        - name: Windows
          os: windows-latest
          c_compiler: cl
          cpp_compiler: cl

    steps:
      # We need *all* the submodules. Every. Single. One.
    - uses: actions/checkout@v4
      submodules: recursive

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
